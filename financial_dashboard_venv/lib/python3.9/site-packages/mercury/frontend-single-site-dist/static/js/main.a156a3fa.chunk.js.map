{"version":3,"sources":["utils.ts","components/authSlice.ts","components/versionSlice.ts","components/LoginButton.tsx","components/UserButton.tsx","components/NavBar.tsx","views/appSlice.ts","components/WindowDimensions.tsx","components/Notebooks/notebooksSlice.ts","tasks/tasksSlice.ts","components/Widgets/widgetsSlice.ts","components/Widgets/Checkbox.tsx","components/Widgets/Numeric.tsx","components/Widgets/Range.tsx","components/Widgets/Select.tsx","components/Widgets/Slider.tsx","components/Widgets/Types.tsx","components/Widgets/File.tsx","components/Widgets/Text.tsx","components/Widgets/Markdown.tsx","components/SelectExecutionHistory.tsx","components/SideBar.tsx","components/MainView.tsx","components/WatchMode.tsx","components/FilesView.tsx","components/MadeWithDiv.tsx","components/RestAPIView.tsx","components/AutoRefresh.tsx","components/WaitPDFExport.tsx","views/AppView.tsx","SingleRoute.tsx","Root.tsx","store.ts","rootReducer.ts","index.tsx"],"names":["getSessionId","sessionId","sessionStorage","getItem","uuidv4","setItem","setAxiosAuthToken","token","axios","defaults","headers","common","handleDownload","url","filename","get","responseType","then","res","fileDownload","data","initToken","localStorage","initialState","username","user","pk","first_name","last_name","email","authSlice","createSlice","name","reducers","setToken","state","action","payload","removeItem","setUsername","setUserInfo","actions","getToken","auth","getUsername","versionSlice","fetchingIsPro","isPro","welcome","setVersion","setWelcome","getIsPro","version","LoginButton","style","color","padding","float","href","className","aria-hidden","UserButton","dispatch","useDispatch","history","useHistory","margin","role","id","data-bs-toggle","aria-expanded","aria-labelledby","onClick","a","post","toast","success","push","error","logout","NavBar","alt","src","process","height","appSlice","view","files","filesState","showSideBar","setView","setFilesState","setFiles","setShowSideBar","toggleShowSideBar","getView","app","getOutputFilesState","getOutputFiles","getShowSideBar","getWindowDimensions","window","width","innerWidth","innerHeight","notebooksSlice","notebooks","loadingState","selectedNotebook","loadingStateSelected","watchModeCounter","slidesHash","setNotebooks","setLoadingState","setSelectedNotebook","startsWith","file_updated_at","setLoadingStateSelected","setSlidesHash","getSelectedNotebook","getLoadingStateSelected","getWatchModeCounter","getSlidesHash","fetchNotebook","silent","clearExecutionHistory","parsedParams","JSON","parse","params","console","tasksSlice","currentTask","historicTask","previousTask","exportingToPDF","exportToPDFJobId","exportToPDFCounter","executionHistory","setCurrentTask","setHistoricTask","setPreviousTask","copyCurrentToPreviousTask","setExportingToPDF","setExportToPDFJobId","resetExportToPDFCounter","increaseExportToPDFCounter","stopPDFExport","setExecutionHistory","getCurrentTask","tasks","getHistoricTask","getPreviousTask","getExportingToPDF","getExportToPDFJobId","getExportToPDFCounter","getExecutionHistory","fetchCurrentTask","notebookId","scrapeSlidesHash","iframeElement","document","getElementById","hash","contentWindow","location","fetchExecutionHistory","clearPreviousHistory","widgetsSlice","widgets","setWidgetValue","key","value","clearWidgets","getWidgetsValues","CheckboxWidget","widgetKey","label","disabled","type","onChange","checked","htmlFor","NumericWidget","min","max","step","minValue","undefined","maxValue","stepValue","e","onBlur","RangeWidget","vertical","values","length","paddingTop","display","justifyContent","flexWrap","renderTrack","props","children","onMouseDown","onTouchStart","ref","borderRadius","background","getTrackBackground","colors","alignSelf","fontSize","renderThumb","index","isDragged","border","backgroundColor","alignItems","boxShadow","outline","position","top","fontWeight","fontFamily","SelectWidget","choices","multi","selectStyles","menu","base","zIndex","selectedValue","selectedValues","options","map","choice","includes","isDisabled","styles","isMulti","isSingleOption","vs","Array","from","filter","i","SliderWidget","vals","isCheckboxWidget","widget","input","isNumericWidget","isSliderWidget","isRangeWidget","isFileWidget","isTextWidget","isMarkdownWidget","output","FileWidget","maxFileSize","fileSizeLimit","onprocessfile","file","serverId","server","baseURL","revert","uniqueFileId","load","delete","labelIdle","TextWidget","rows","rowsValue","sanitizeString","input_string","replace","target","registerPlugin","FilePondPluginImageExifOrientation","FilePondPluginImagePreview","FilePondPluginFileValidateSize","MarkdownWidget","rehypePlugins","remarkGfm","rehypeHighlight","emoji","rehypeRaw","SelectExecutionHistory","useSelector","useEffect","lastHistoricTask","Object","entries","count","run","historical","parseInt","SideBar","notebookTitle","notebookSchedule","taskCreatedAt","waiting","widgetsParams","watchMode","notebookPath","displayEmbed","showFiles","isPresentation","notebookParseErrors","widgetsValues","widgetParams","fileKeys","allFilesUploaded","prototype","hasOwnProperty","call","additionalStyle","overflowY","data-toggle","data-placement","title","marginRight","getState","task","session_id","stringify","executeNotebook","cursor","notebook_id","notebook_path","job_id","exportToPDF","open","marginTop","marginBottom","clearTasks","MainView","errorMsg","columnsWidth","useState","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","useWindowDimensions","iframeHeight","paddingRight","paddingLeft","tag","blocking","WatchModeComponent","notebook","setTimeout","FilesView","filesLinks","f","fname","split","pop","paddingBottom","MadeWithDiv","rel","RestAPIView","slug","taskSessionId","response","setResponse","examplePostData","fetchResponse","postRequest","AutoRefresh","WaitPDFExport","counter","jobId","exportingPDF","ready","getPDF","autoClose","AppView","isSingleApp","appView","outputFiles","outputFilesState","waitForTask","isWatchMode","taskId","result","default_view_path","showRestApi","toLowerCase","message","schedule","created_at","areOutputFilesAvailable","errors","left","Routes","log","isAxiosError","status","reload","Root","store","createBrowserHistory","rootReducer","combineReducers","notebooksReducer","tasksReducer","widgetsReducer","versionReducer","appReducer","authReducer","middleware","getDefaultMiddleware","configureStore","reducer","preloadedState","origin","render","hideProgressBar","newestOnTop","closeOnClick","pauseOnHover"],"mappings":"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","file":"static/js/main.a156a3fa.chunk.js","sourcesContent":["import { v4 as uuidv4 } from 'uuid';\r\nimport axios from \"axios\";\r\nimport fileDownload from \"js-file-download\";\r\n\r\nexport const getSessionId = () => {\r\n    var sessionId = sessionStorage.getItem(\"sessionId\");\r\n    if (sessionId == null) {\r\n        sessionId = uuidv4();\r\n        sessionStorage.setItem(\"sessionId\", sessionId);\r\n    }\r\n    return sessionId;\r\n}\r\n\r\nexport const setAxiosAuthToken = (token: string | null) => {\r\n    if (typeof token !== \"undefined\" && token) {\r\n        // Apply for every request\r\n        axios.defaults.headers.common[\"Authorization\"] = \"Token \" + token;\r\n    } else {\r\n        // Delete auth header\r\n        delete axios.defaults.headers.common[\"Authorization\"];\r\n    }\r\n};\r\n\r\nexport const handleDownload = (url: string, filename: string) => {\r\n    axios\r\n        .get(url, {\r\n            responseType: \"blob\",\r\n        })\r\n        .then((res) => {\r\n            fileDownload(res.data, filename);\r\n        });\r\n};","/* eslint-disable import/no-cycle */\r\nimport {\r\n  createSlice,\r\n  PayloadAction,\r\n  AnyAction,\r\n  Dispatch,\r\n} from '@reduxjs/toolkit';\r\nimport axios, { AxiosError } from 'axios';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport { RootState } from '../store';\r\nimport { setAxiosAuthToken } from '../utils';\r\n\r\nlet initToken = null;\r\nif (localStorage.getItem(\"token\")) {\r\n  initToken = localStorage.getItem(\"token\");\r\n  setAxiosAuthToken(initToken);\r\n}\r\n\r\ntype UserType = {\r\n  pk: number;\r\n  username: string;\r\n  first_name: string;\r\n  last_name: string;\r\n  email: string;\r\n}\r\n\r\nconst initialState = {\r\n  token: initToken as string | null,\r\n  username: \"\" as string,\r\n  user: {\r\n    pk: 0,\r\n    username: \"\",\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    email: \"\"\r\n  } as UserType,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    setToken(state, action: PayloadAction<string | null>) {\r\n      state.token = action.payload;\r\n      setAxiosAuthToken(state.token);\r\n      if (state.token) {\r\n        localStorage.setItem(\"token\", state.token);\r\n      } else {\r\n        localStorage.removeItem(\"token\")\r\n      }\r\n    },\r\n    setUsername(state, action: PayloadAction<string | null>) {\r\n      state.username = action.payload ? action.payload : \"\";\r\n      if (state.username && state.username !== \"\") {\r\n        localStorage.setItem(\"username\", state.username);\r\n      } else {\r\n        localStorage.removeItem(\"username\");\r\n      }\r\n    },\r\n    setUserInfo(state, action: PayloadAction<UserType>) {\r\n      state.user = action.payload;\r\n    }\r\n\r\n  },\r\n});\r\n\r\nexport default authSlice.reducer;\r\n\r\nexport const {\r\n  setToken,\r\n  setUsername,\r\n  setUserInfo,\r\n} = authSlice.actions;\r\n\r\nexport const getToken = (state: RootState) => state.auth.token;\r\nexport const getUsername = (state: RootState) => state.auth.username;\r\nexport const getUserInfo = (state: RootState) => state.auth.user;\r\n\r\n\r\nexport const fetchToken =\r\n  (username: string, password: string, history: any) =>\r\n    async (dispatch: Dispatch<AnyAction>) => {\r\n      try {\r\n        const url = '/api/v1/auth/login/';\r\n        const { data } = await axios.post(url, { username, password });\r\n        dispatch(setToken(data.key));\r\n        dispatch(setUsername(username));\r\n        toast.success(\"Log in successfull\")\r\n        // redirect ...\r\n        history.push(\"/\");\r\n      } catch (error) {\r\n        const err = error as AxiosError\r\n        let msg = \"Problem during authentication. \"\r\n        if (err.response?.data?.non_field_errors !== undefined) {\r\n          msg += err.response?.data?.non_field_errors;\r\n        }\r\n        toast.error(msg)\r\n      }\r\n    };\r\n\r\n\r\nexport const logout =\r\n  (history: any) =>\r\n    async (dispatch: Dispatch<AnyAction>) => {\r\n      try {\r\n        const url = '/api/v1/auth/logout/';\r\n        await axios.post(url);\r\n        toast.success(\"Log out successfull\");\r\n        dispatch(setToken(\"\"));\r\n        dispatch(setUsername(\"\"));\r\n        history.push(\"/\");\r\n      } catch (error) {\r\n        toast.error(\"Problem during log out\")\r\n      }\r\n    };\r\n\r\n\r\nexport const fetchUserInfo =\r\n  () =>\r\n    async (dispatch: Dispatch<AnyAction>) => {\r\n      try {\r\n        const url = '/api/v1/auth/user/';\r\n        const { data } = await axios.get(url);\r\n        dispatch(setUserInfo(data));\r\n      } catch (error) {\r\n        console.log(`Problem during getting user info. ${error}`)\r\n      }\r\n    };\r\n\r\n\r\nexport const changePassword =\r\n  (oldPassword: string, newPassword1: string, newPassword2: string) =>\r\n    async (dispatch: Dispatch<AnyAction>) => {\r\n      try {\r\n        const url = '/api/v1/auth/password/change/';\r\n        await axios.post(url, { old_password: oldPassword, new_password1: newPassword1, new_password2: newPassword2 });\r\n        toast.success(\"Password changed successfully\")\r\n      } catch (error) {\r\n        toast.error(\"Password not changed. Problem during password change.\")\r\n      }\r\n    };","/* eslint-disable import/no-cycle */\r\nimport {\r\n  createSlice,\r\n  PayloadAction,\r\n  AnyAction,\r\n  Dispatch,\r\n} from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\nimport { RootState } from '../store';\r\nimport { setToken, setUsername } from './authSlice';\r\n\r\n\r\nconst initialState = {\r\n  fetchingIsPro: true,\r\n  isPro: false,\r\n  welcome: \"\"\r\n};\r\n\r\nconst versionSlice = createSlice({\r\n  name: 'version',\r\n  initialState,\r\n  reducers: {\r\n    setVersion(state, action: PayloadAction<{ isPro: boolean }>) {\r\n      const { isPro } = action.payload;\r\n      state.isPro = isPro;\r\n      state.fetchingIsPro = false;\r\n    },\r\n    setWelcome(state, action: PayloadAction<string>) {\r\n      state.welcome = action.payload;\r\n    }\r\n  },\r\n});\r\n\r\nexport default versionSlice.reducer;\r\n\r\nexport const {\r\n  setVersion,\r\n  setWelcome,\r\n} = versionSlice.actions;\r\n\r\nexport const getIsPro = (state: RootState) => state.version.isPro;\r\nexport const getFetchingIsPro = (state: RootState) => state.version.fetchingIsPro;\r\nexport const getWelcome = (state: RootState) => state.version.welcome;\r\n\r\nexport const fetchVersion =\r\n  () =>\r\n    async (dispatch: Dispatch<AnyAction>) => {\r\n\r\n      try {\r\n        const url = '/api/v1/version/';\r\n        const { data } = await axios.get(url);\r\n        dispatch(setVersion(data));\r\n      } catch (error) {\r\n        console.log(`Problem during loading Mercury version. ${error}`);\r\n        if (axios.isAxiosError(error)) {\r\n          if (error.response?.status === 401) {\r\n            // clear auth data \r\n            dispatch(setToken(null));\r\n            dispatch(setUsername(null));\r\n            window.location.reload();\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n\r\nexport const fetchWelcome =\r\n  () =>\r\n    async (dispatch: Dispatch<AnyAction>) => {\r\n\r\n      try {\r\n        const url = '/api/v1/welcome/';\r\n        const { data } = await axios.get(url);\r\n        dispatch(setWelcome(data.msg));\r\n      } catch (error) {\r\n        console.log(`Problem during loading Mercury welcome message. ${error}`);\r\n      }\r\n\r\n    };\r\n\r\n","import React from \"react\";\n\nexport default function LoginButton() {\n  return (\n    <div style={{ color: \"white\", padding: \"5px\", float: \"right\" }}>\n      <a href=\"/login\" className=\"btn btn-primary btn-sm \">\n        <i className=\"fa fa-sign-in\" aria-hidden=\"true\"></i> Log in\n      </a>\n    </div>\n  );\n}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { logout } from \"./authSlice\";\n\ntype UserButtonProps = {\n  username: string;\n};\n\nexport default function UserButton({ username }: UserButtonProps) {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  return (\n    <div>\n      <div className=\"dropdown\" style={{ float: \"right\" }}>\n        <a\n          className=\"btn btn-secondary btn-sm dropdown-toggle\"\n          style={{ margin: \"5px\" }}\n          href=\"#\"\n          role=\"button\"\n          id=\"dropdownMenuLink\"\n          data-bs-toggle=\"dropdown\"\n          aria-expanded=\"false\"\n        >\n          {username}\n        </a>\n\n        <ul\n          className=\"dropdown-menu dropdown-menu-end\"\n          aria-labelledby=\"dropdownMenuLink\"\n        >\n          <li>\n            <a className=\"dropdown-item\" href=\"/account\">\n              <i className=\"fa fa-user\" aria-hidden=\"true\"></i> Account\n            </a>\n          </li>\n          <li>\n            <hr className=\"dropdown-divider\" />\n          </li>\n          <li>\n            <a\n              className=\"dropdown-item\"\n              onClick={() => dispatch(logout(history))}\n            >\n              <i className=\"fa fa-sign-out\" aria-hidden=\"true\"></i> Log out\n            </a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport LoginButton from \"./LoginButton\";\nimport UserButton from \"./UserButton\";\n\ntype NavBarProps = {\n  isPro: boolean;\n  username: string;\n};\n\nexport default function NavBar({ isPro, username }: NavBarProps) {\n  return (\n    <header className=\"navbar navbar-dark sticky-top bg-dark flex-md-nowrap p-0\">\n      <a className=\"navbar-brand col-md-3 col-lg-3 me-0 px-3\" href=\"/\">\n      <i className=\"fa fa-home\" aria-hidden=\"true\"></i> {\" \"}\n        <img\n          alt=\"Mercury\"\n          src={\n            process.env.PUBLIC_URL +\n            process.env.REACT_APP_LOCAL_URL +\n            \"/mercury_logo.svg\"\n          }\n          style={{ height: \"24px\" }}\n        />\n      </a>\n\n      {isPro && username === \"\" && <LoginButton />}\n      {isPro && username !== \"\" && <UserButton username={username} />}\n\n    </header>\n  );\n}\n","/* eslint-disable import/no-cycle */\r\nimport {\r\n  createSlice,\r\n  PayloadAction,\r\n  AnyAction,\r\n  Dispatch,\r\n} from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\nimport { RootState } from '../store';\r\nimport { getSessionId } from '../utils';\r\n\r\n\r\nconst initialState = {\r\n  view: \"app\",\r\n  files: [] as string[],\r\n  filesState: \"unknown\",\r\n  showSideBar: true,\r\n};\r\n\r\nconst appSlice = createSlice({\r\n  name: 'app',\r\n  initialState,\r\n  reducers: {\r\n    setView(state, action: PayloadAction<string>) {\r\n      state.view = action.payload;\r\n    },\r\n    setFilesState(state, action: PayloadAction<string>) {\r\n      state.filesState = action.payload;\r\n    },\r\n    setFiles(state, action: PayloadAction<string []>) {\r\n      state.files = action.payload;\r\n    },\r\n    setShowSideBar(state, action: PayloadAction<boolean>) {\r\n      state.showSideBar = action.payload;\r\n    },\r\n    toggleShowSideBar(state) {\r\n      state.showSideBar = !state.showSideBar;\r\n    },\r\n  },\r\n});\r\n\r\nexport default appSlice.reducer;\r\n\r\nexport const {\r\n  setView,\r\n  setFilesState,\r\n  setFiles,\r\n  setShowSideBar,\r\n  toggleShowSideBar,\r\n} = appSlice.actions;\r\n\r\nexport const getView = (state: RootState) => state.app.view;\r\nexport const getOutputFilesState = (state: RootState) => state.app.filesState;\r\nexport const getOutputFiles = (state: RootState) => state.app.files;\r\nexport const getShowSideBar = (state: RootState) => state.app.showSideBar;\r\n\r\nexport const fetchOutputFiles =\r\n  (taskId: number) =>\r\n    async (dispatch: Dispatch<AnyAction>) => {\r\n      try {\r\n        dispatch(setFilesState(\"loading\"))\r\n        dispatch(setFiles([]));\r\n        const sessionId = getSessionId();\r\n        const url = `/api/v1/output_files/${sessionId}/${taskId}`;\r\n        const { data } = await axios.get(url);\r\n        dispatch(setFiles(data));\r\n        dispatch(setFilesState(\"loaded\"))\r\n      } catch (error) {\r\n        dispatch(setFilesState(\"error\"))\r\n        console.error(`Problem during loading output files. ${error}`);\r\n      }\r\n\r\n    };\r\n","// code from https://stackoverflow.com/questions/36862334/get-viewport-window-height-in-reactjs\nimport { useState, useEffect } from \"react\";\n\nexport function getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height,\n  };\n}\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n","/* eslint-disable import/no-cycle */\r\nimport {\r\n  createSlice,\r\n  PayloadAction,\r\n  AnyAction,\r\n  Dispatch,\r\n} from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\nimport { RootState } from '../../store';\r\nimport { clearExecutionHistory } from '../../tasks/tasksSlice';\r\nimport { setShowSideBar } from '../../views/appSlice';\r\nimport { IWidget } from '../Widgets/Types';\r\nimport { getWindowDimensions } from '../WindowDimensions';\r\n\r\nexport interface INotebookParams {\r\n  title: string | null;\r\n  description: string | null;\r\n  date: string | null;\r\n  author: string | null;\r\n  params: IWidget[];\r\n}\r\n\r\nexport interface INotebook {\r\n  id: number;\r\n  created_at: Date;\r\n  file_updated_at: Date;\r\n  title: string;\r\n  slug: string;\r\n  path: string;\r\n  share: string;\r\n  params: INotebookParams;\r\n  state: string;\r\n  default_view_path: string;\r\n  output: string;\r\n  format: string;\r\n  slidesHash: string;\r\n  schedule: string;\r\n  errors: string;\r\n}\r\n\r\nconst initialState = {\r\n  notebooks: [] as INotebook[],\r\n  loadingState: \"loading\",\r\n  selectedNotebook: {} as INotebook,\r\n  loadingStateSelected: \"loading\",\r\n  watchModeCounter: 0,\r\n  slidesHash: \"\",\r\n};\r\n\r\nconst notebooksSlice = createSlice({\r\n  name: 'notebooks',\r\n  initialState,\r\n  reducers: {\r\n    setNotebooks(state, action: PayloadAction<INotebook[]>) {\r\n      state.notebooks = action.payload;\r\n    },\r\n    setLoadingState(state, action: PayloadAction<string>) {\r\n      state.loadingState = action.payload;\r\n    },\r\n    setSelectedNotebook(state, action: PayloadAction<INotebook>) {\r\n\r\n      if (action.payload.state.startsWith(\"WATCH\") && state.selectedNotebook.file_updated_at === action.payload.file_updated_at) {\r\n        // console.log(\"skip notebook update\")\r\n      } else {\r\n        state.selectedNotebook = action.payload;\r\n      }\r\n      if (action.payload.state.startsWith(\"WATCH\")) {\r\n        state.watchModeCounter += 1;\r\n      }\r\n    },\r\n    setLoadingStateSelected(state, action: PayloadAction<string>) {\r\n      state.loadingStateSelected = action.payload;\r\n    },\r\n    setSlidesHash(state, action: PayloadAction<string>) {\r\n      state.slidesHash = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport default notebooksSlice.reducer;\r\n\r\nexport const {\r\n  setNotebooks,\r\n  setLoadingState,\r\n  setSelectedNotebook,\r\n  setLoadingStateSelected,\r\n  setSlidesHash,\r\n} = notebooksSlice.actions;\r\n\r\nexport const getNotebooks = (state: RootState) => state.notebooks.notebooks;\r\nexport const getLoadingState = (state: RootState) => state.notebooks.loadingState;\r\nexport const getSelectedNotebook = (state: RootState) => state.notebooks.selectedNotebook;\r\nexport const getLoadingStateSelected = (state: RootState) => state.notebooks.loadingStateSelected;\r\nexport const getWatchModeCounter = (state: RootState) => state.notebooks.watchModeCounter;\r\nexport const getSlidesHash = (state: RootState) => state.notebooks.slidesHash;\r\n\r\nexport const fetchNotebooks =\r\n  () =>\r\n    async (dispatch: Dispatch<AnyAction>) => {\r\n      try {\r\n        dispatch(setSlidesHash(\"\"));\r\n        dispatch(setLoadingState(\"loading\"));\r\n        dispatch(clearExecutionHistory());\r\n        const url = '/api/v1/notebooks/';\r\n        const { data } = await axios.get(url);\r\n        const parsedNotebooks = data.map((notebook: any) => {\r\n          const parsedParams = JSON.parse(notebook.params)\r\n\r\n          return {\r\n            ...notebook,\r\n            params: parsedParams as INotebookParams,\r\n          }\r\n        })\r\n        dispatch(setNotebooks(parsedNotebooks));\r\n        dispatch(setLoadingState(\"loaded\"))\r\n      } catch (error) {\r\n        dispatch(setLoadingState(\"error\"))\r\n        console.error(`Problem during loading recent notebooks. ${error}`);\r\n      }\r\n\r\n    };\r\n\r\n\r\nexport const fetchNotebook =\r\n  (id: number, silent = false) =>\r\n    async (dispatch: Dispatch<AnyAction>) => {\r\n      try {\r\n        if (!silent) {\r\n          dispatch(setSlidesHash(\"\"));\r\n          dispatch(clearExecutionHistory());\r\n        }\r\n\r\n        const { width } = getWindowDimensions();\r\n        dispatch(setShowSideBar(width > 992));\r\n\r\n        if (!silent) {\r\n          dispatch(setLoadingStateSelected(\"loading\"));\r\n        }\r\n        const url = `/api/v1/notebooks/${id}/`;\r\n        const { data } = await axios.get(url);\r\n        const parsedParams = JSON.parse(data.params);\r\n        dispatch(setSelectedNotebook(\r\n          {\r\n            ...data,\r\n            params: parsedParams as INotebookParams,\r\n          }\r\n        ));\r\n        if (!silent) {\r\n          dispatch(setLoadingStateSelected(\"loaded\"));\r\n        }\r\n      } catch (error) {\r\n        if (!silent) {\r\n          dispatch(setLoadingStateSelected(\"error\"));\r\n        }\r\n        console.error(`Problem during loading selected notebook (${id}). ${error}`);\r\n      }\r\n    };\r\n\r\n","/* eslint-disable import/no-cycle */\r\nimport {\r\n    createSlice,\r\n    AnyAction,\r\n    Dispatch,\r\n    PayloadAction,\r\n} from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nimport { RootState } from '../store';\r\nimport { toast } from \"react-toastify\";\r\nimport { getSessionId, handleDownload } from '../utils';\r\nimport { setSlidesHash } from '../components/Notebooks/notebooksSlice';\r\n\r\nexport interface ITask {\r\n    id: number;\r\n    task_id: string;\r\n    session_id: string;\r\n    created_at: Date;\r\n    state: \"CREATED\" | \"RECEIVED\" | \"DONE\" | \"ERROR\";\r\n    params: string;\r\n    result: string;\r\n}\r\n\r\nconst initialState = {\r\n    currentTask: {} as ITask,\r\n    historicTask: {} as ITask,\r\n    previousTask: {} as ITask,\r\n    exportingToPDF: false,\r\n    exportToPDFJobId: '',\r\n    exportToPDFCounter: 0,\r\n    executionHistory: [] as ITask[],\r\n};\r\n\r\nconst tasksSlice = createSlice({\r\n    name: 'tasks',\r\n    initialState,\r\n    reducers: {\r\n        setCurrentTask(state, action: PayloadAction<ITask>) {\r\n            state.currentTask = action.payload;\r\n        },\r\n        setHistoricTask(state, action: PayloadAction<ITask>) {\r\n            state.historicTask = action.payload;\r\n        },\r\n        setPreviousTask(state, action: PayloadAction<ITask>) {\r\n            state.previousTask = action.payload;\r\n        },\r\n        copyCurrentToPreviousTask(state) {\r\n            state.previousTask = state.currentTask;\r\n        },\r\n        setExportingToPDF(state, action: PayloadAction<boolean>) {\r\n            state.exportingToPDF = action.payload;\r\n        },\r\n        setExportToPDFJobId(state, action: PayloadAction<string>) {\r\n            state.exportToPDFJobId = action.payload;\r\n        },\r\n        resetExportToPDFCounter(state) {\r\n            state.exportToPDFCounter = 0;\r\n        },\r\n        increaseExportToPDFCounter(state) {\r\n            state.exportToPDFCounter += 1;\r\n        },\r\n        stopPDFExport(state) {\r\n            state.exportingToPDF = false;\r\n            state.exportToPDFJobId = \"\";\r\n            state.exportToPDFCounter = 0;\r\n        },\r\n        setExecutionHistory(state, action: PayloadAction<ITask[]>) {\r\n            state.executionHistory = action.payload;\r\n        },\r\n        clearExecutionHistory(state) {\r\n            state.executionHistory = [];\r\n        }\r\n    },\r\n});\r\n\r\nexport default tasksSlice.reducer;\r\n\r\nexport const {\r\n    setCurrentTask,\r\n    setHistoricTask,\r\n    setPreviousTask,\r\n    copyCurrentToPreviousTask,\r\n    setExportingToPDF,\r\n    setExportToPDFJobId,\r\n    resetExportToPDFCounter,\r\n    increaseExportToPDFCounter,\r\n    stopPDFExport,\r\n    setExecutionHistory,\r\n    clearExecutionHistory,\r\n} = tasksSlice.actions;\r\n\r\nexport const getCurrentTask = (state: RootState) => state.tasks.currentTask;\r\nexport const getHistoricTask = (state: RootState) => state.tasks.historicTask;\r\nexport const getPreviousTask = (state: RootState) => state.tasks.previousTask;\r\nexport const getExportingToPDF = (state: RootState) => state.tasks.exportingToPDF;\r\nexport const getExportToPDFJobId = (state: RootState) => state.tasks.exportToPDFJobId;\r\nexport const getExportToPDFCounter = (state: RootState) => state.tasks.exportToPDFCounter;\r\nexport const getExecutionHistory = (state: RootState) => state.tasks.executionHistory;\r\n\r\nexport const fetchCurrentTask =\r\n    (notebookId: Number) =>\r\n        async (dispatch: Dispatch<AnyAction>) => {\r\n\r\n            const sessionId = getSessionId();\r\n\r\n            try {\r\n                const url = `/api/v1/latest_task/${notebookId}/${sessionId}`;\r\n                const { data } = await axios.get(url);\r\n                dispatch(setCurrentTask(data))\r\n\r\n            } catch (error) {\r\n                // console.clear();\r\n                dispatch(setCurrentTask({} as ITask));\r\n            }\r\n\r\n        };\r\n\r\nconst scrapeSlidesHash = () => {\r\n    try {\r\n        const iframeElement = (document.getElementById(\"main-iframe\") as HTMLIFrameElement);\r\n        const hash = iframeElement?.contentWindow?.location?.hash;\r\n        if (hash) {\r\n            return hash;\r\n        }\r\n    } catch (error) { }\r\n    return \"\";\r\n}\r\n\r\n\r\nexport const executeNotebook =\r\n    (notebookId: Number) =>\r\n        async (dispatch: Dispatch<AnyAction>, getState: () => any) => {\r\n            const { widgets } = getState().widgets;\r\n            const sessionId = getSessionId();\r\n\r\n            const slidesHash = scrapeSlidesHash();\r\n            dispatch(setSlidesHash(slidesHash));\r\n\r\n            try {\r\n                const task = {\r\n                    session_id: sessionId,\r\n                    params: JSON.stringify(widgets),\r\n                }\r\n                const url = `/api/v1/execute/${notebookId}`;\r\n                const { data } = await axios.post(url, task);\r\n                dispatch(setCurrentTask(data))\r\n\r\n            } catch (error) {\r\n                console.error(`Problem during notebook execution. ${error}`);\r\n            }\r\n\r\n        };\r\n\r\n\r\nexport const clearTasks =\r\n    (notebookId: Number) =>\r\n        async (dispatch: Dispatch<AnyAction>) => {\r\n            try {\r\n                const sessionId = getSessionId();\r\n                const url = `/api/v1/clear_tasks/${notebookId}/${sessionId}`;\r\n                await axios.post(url);\r\n                dispatch(setCurrentTask({} as ITask));\r\n                dispatch(setHistoricTask({} as ITask));\r\n                dispatch(setPreviousTask({} as ITask));\r\n                dispatch(setExecutionHistory([]));\r\n                toast.success(\"All previous tasks deleted. The default view of the app is displayed.\")\r\n            } catch (error) {\r\n                toast.error(`Trying to clear previous tasks. The error occured. ${error}`)\r\n            }\r\n        };\r\n\r\n\r\nexport const exportToPDF =\r\n    (notebookId: Number, notebookPath: String) =>\r\n        async (dispatch: Dispatch<AnyAction>) => {\r\n            try {\r\n                dispatch(setExportingToPDF(true));\r\n                dispatch(resetExportToPDFCounter());\r\n                dispatch(setExportToPDFJobId(\"\"));\r\n\r\n                const sessionId = getSessionId();\r\n                const url = `/api/v1/export_pdf/`;\r\n                // convert from JS camel case to Python undescore variables\r\n                const params = {\r\n                    session_id: sessionId,\r\n                    notebook_id: notebookId,\r\n                    notebook_path: notebookPath,\r\n                }\r\n                const { data } = await axios.post(url, params);\r\n                dispatch(setExportToPDFJobId(data.job_id))\r\n            } catch (error) {\r\n                toast.error(`The error occured during PDF export. ${error}`);\r\n                dispatch(stopPDFExport());\r\n            }\r\n        };\r\n\r\nexport const getPDF =\r\n    (jobId: String) =>\r\n        async (dispatch: Dispatch<AnyAction>) => {\r\n            try {\r\n                const url = `/api/v1/get_pdf/${jobId}`;\r\n                const { data } = await axios.get(url);\r\n                if (data.ready) {\r\n                    dispatch(stopPDFExport());\r\n                    if (data.error !== \"\") {\r\n                        toast.error(data.error);\r\n                    } else {\r\n                        handleDownload(\r\n                            `${axios.defaults.baseURL}${data.url}`,\r\n                            `${data.title}`\r\n                        )\r\n                    }\r\n                } else {\r\n                    dispatch(increaseExportToPDFCounter());\r\n                }\r\n            } catch (error) {\r\n                toast.error(`The error occured during PDF export. ${error}`);\r\n                dispatch(stopPDFExport());\r\n            }\r\n        };\r\n\r\n\r\n\r\nexport const fetchExecutionHistory =\r\n    (notebookId: Number, clearPreviousHistory = true) =>\r\n        async (dispatch: Dispatch<AnyAction>) => {\r\n\r\n            dispatch(setHistoricTask({} as ITask));\r\n            if(clearPreviousHistory) {\r\n                dispatch(clearExecutionHistory());\r\n            }\r\n\r\n            const sessionId = getSessionId();\r\n\r\n            try {\r\n                const url = `/api/v1/execution_history/${notebookId}/${sessionId}`;\r\n                const { data } = await axios.get(url);\r\n                dispatch(setExecutionHistory(data))\r\n            } catch (error) {\r\n                dispatch(clearExecutionHistory());\r\n            }\r\n\r\n        };\r\n","/* eslint-disable import/no-cycle */\nimport {\n    createSlice,\n    PayloadAction,\n} from '@reduxjs/toolkit';\n\nimport { RootState } from '../../store';\n\nconst initialState = {\n    widgets: {} as Record<string, string | boolean | number | [number, number] | string[] | null | undefined | unknown>\n};\n\nconst widgetsSlice = createSlice({\n    name: 'widgets',\n    initialState,\n    reducers: {\n        setWidgetValue(state, action: PayloadAction<{ key: string, value: string | boolean | number | [number, number] | string[] | null | undefined | unknown }>) {\n            const { key, value } = action.payload;\n            state.widgets[key] = value;\n        },\n        clearWidgets(state) {\n            state.widgets = {};\n        }\n    },\n});\n\nexport default widgetsSlice.reducer;\n\nexport const {\n    setWidgetValue,\n    clearWidgets,\n} = widgetsSlice.actions;\n\nexport const getWidgetsValues = (state: RootState) => state.widgets.widgets;","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { setWidgetValue } from \"./widgetsSlice\";\n\ntype CheckboxProps = {\n  widgetKey: string;\n  label: string | null;\n  value: boolean | null;\n  disabled: boolean;\n};\n\nexport default function CheckboxWidget({\n  widgetKey,\n  label,\n  value,\n  disabled,\n}: CheckboxProps) {\n  const dispatch = useDispatch();\n  return (\n    <div className=\"form-group form-check form-switch mb-3\">\n      <input\n        className=\"form-check-input\"\n        type=\"checkbox\"\n        id={`checkbox-${label}`}\n        disabled={disabled}\n        onChange={() => {\n          dispatch(setWidgetValue({ key: widgetKey, value: !value }));\n        }}\n        checked={ value != null ? value : false}\n      />\n      <label className=\"form-check-label\" htmlFor={`checkbox-${label}`}>\n        {label}\n      </label>\n    </div>\n  );\n}\n","import React from \"react\";\nimport NumericInput from \"react-numeric-input\";\nimport { useDispatch } from \"react-redux\";\nimport { setWidgetValue } from \"./widgetsSlice\";\n\ntype NumericProps = {\n  widgetKey: string;\n  label: string | null;\n  value: number | null;\n  min: number | null;\n  max: number | null;\n  step: number | null;\n  disabled: boolean;\n};\n\nexport default function NumericWidget({\n  widgetKey,\n  label,\n  value,\n  min,\n  max,\n  step,\n  disabled,\n}: NumericProps) {\n  const dispatch = useDispatch();\n\n  let minValue = undefined;\n  let maxValue = undefined;\n  let stepValue = 1;\n  if (min) {\n    minValue = min;\n  }\n  if (max) {\n    maxValue = max;\n  }\n  if (step) {\n    stepValue = step;\n  }\n\n  return (\n    <div className=\"form-group mb-3\">\n      <label htmlFor={`checkbox-${label}`}>{label}</label>\n      <NumericInput\n        className=\"form-control\"\n        disabled={disabled}\n        value={value as number}\n        min={minValue}\n        max={maxValue}\n        step={stepValue}\n        onChange={(e) => {\n          dispatch(setWidgetValue({ key: widgetKey, value: e }));\n        }}\n        onBlur={(e) => {\n          if (min && value && value < min) {\n            dispatch(setWidgetValue({ key: widgetKey, value: min }));\n          }\n          if (max && value && value > max) {\n            dispatch(setWidgetValue({ key: widgetKey, value: max }));\n          }\n        }}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { setWidgetValue } from \"./widgetsSlice\";\nimport { Range, getTrackBackground } from \"react-range\";\n\ntype RangeProps = {\n  widgetKey: string;\n  label: string | null;\n  value: [number, number] | null;\n  min: number | null;\n  max: number | null;\n  step: number | null;\n  vertical: boolean | null;\n  disabled: boolean;\n};\n\nexport default function RangeWidget({\n  widgetKey,\n  label,\n  value,\n  min,\n  max,\n  step,\n  vertical,\n  disabled,\n}: RangeProps) {\n  const dispatch = useDispatch();\n\n  let minValue = 0;\n  let maxValue = 100;\n  let stepValue = 1;\n  if (min) {\n    minValue = min;\n  }\n  if (max) {\n    maxValue = max;\n  }\n  if (step) {\n    stepValue = step;\n  }\n\n  const values =\n    value != null && value !== undefined && value.length === 2\n      ? value\n      : [minValue, maxValue];\n  return (\n    <div className=\"form-group mb-3\">\n      <label htmlFor={`range-slider-${label}`}>{label}</label>\n\n      <div\n        style={{\n          paddingTop: \"12px\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          flexWrap: \"wrap\",\n        }}\n      >\n        <Range\n          disabled={disabled}\n          values={values}\n          step={stepValue}\n          min={minValue}\n          max={maxValue}\n          onChange={(values) => {\n            dispatch(\n              setWidgetValue({\n                key: widgetKey,\n                value: values as [number, number],\n              })\n            );\n          }}\n          renderTrack={({ props, children }) => (\n            <div\n              onMouseDown={props.onMouseDown}\n              onTouchStart={props.onTouchStart}\n              style={{\n                ...props.style,\n                height: \"36px\",\n                display: \"flex\",\n                width: \"100%\",\n              }}\n            >\n              <div\n                ref={props.ref}\n                style={{\n                  height: \"5px\",\n                  width: \"100%\",\n                  borderRadius: \"4px\",\n                  background: getTrackBackground({\n                    values,\n                    colors: [\n                      \"#ccc\",\n                      disabled ? \"rgba(0, 0, 0, 0.3)\" : \"#2684ff\",\n                      \"#ccc\",\n                    ],\n                    min: minValue,\n                    max: maxValue,\n                  }),\n                  alignSelf: \"center\",\n                }}\n              >\n                {children}\n\n                <div\n                  style={{\n                    display: \"inline-block\",\n                    width: \"100%\",\n                    fontSize: \"12px\",\n                    paddingTop: \"13px\",\n                  }}\n                >\n                  <div style={{ float: \"left\" }}>{minValue}</div>\n                  <div style={{ float: \"right\" }}>{maxValue}</div>\n                </div>\n              </div>\n            </div>\n          )}\n          renderThumb={({ index, props, isDragged }) => (\n            <div\n              {...props}\n              style={{\n                ...props.style,\n                height: \"18px\",\n                width: \"18px\",\n                border: \"None !important\",\n                borderRadius: \"4px\",\n                backgroundColor: \"#FFF\",\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                boxShadow: \"0px 2px 6px #AAA\",\n                outline: \"none\",\n              }}\n            >\n              <div\n                style={{\n                  position: \"absolute\",\n                  top: \"-24px\",\n                  color: \"#fff\",\n                  fontWeight: \"bold\",\n                  fontSize: \"12px\",\n                  fontFamily: \"Arial,Helvetica Neue,Helvetica,sans-serif\",\n                  padding: \"2px\",\n                  borderRadius: \"3px\",\n                  backgroundColor: disabled ? \"rgba(0, 0, 0, 0.3)\" : \"#2684ff\",\n                }}\n              >\n                {values[index]}\n              </div>\n              <div\n                style={{\n                  height: \"12px\",\n                  width: \"3px\",\n                  backgroundColor: isDragged ? \"#2684ff\" : \"#CCC\",\n                }}\n              />\n            </div>\n          )}\n        />\n      </div>\n    </div>\n  );\n}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Select, { MultiValue } from \"react-select\";\nimport { setWidgetValue } from \"./widgetsSlice\";\n\ntype SingleOption = { value: string; label: string };\ntype MultiOption = MultiValue<{ value: string; label: string } | undefined>;\n\nexport function isSingleOption(\n  options: SingleOption | MultiOption\n): options is SingleOption {\n  return (options as SingleOption).value !== undefined;\n}\n\ntype SelectProps = {\n  widgetKey: string;\n  label: string | null;\n  value: string | string[] | null;\n  choices: string[];\n  multi: boolean | undefined;\n  disabled: boolean;\n};\n\nexport default function SelectWidget({\n  widgetKey,\n  label,\n  value,\n  choices,\n  multi,\n  disabled,\n}: SelectProps) {\n  const dispatch = useDispatch();\n\n  const selectStyles = {\n    menu: (base: any) => ({\n      ...base,\n      zIndex: 100,\n    }),\n  };\n\n  let selectedValue: SingleOption = { value: \"\", label: \"\" };\n  let selectedValues: SingleOption[] = [{ value: \"\", label: \"\" }];\n\n  let options: { value: string; label: string }[] = choices.map((choice) => {\n    if (value && choice === value && !multi) {\n      selectedValue = { value: choice, label: choice };\n    }\n    return { value: choice, label: choice };\n  });\n\n  if (multi) {\n    selectedValues = [];\n    choices.map((choice) => {\n      if (value && value.includes(choice) && multi) {\n        selectedValues.push({ value: choice, label: choice });\n      }\n      return { value: choice, label: choice };\n    });\n  }\n\n  return (\n    <div className=\"form-group mb-3\">\n      <label htmlFor={`select-${label}`}>{label}</label>\n      <Select\n        id={`select-${label}`}\n        isDisabled={disabled}\n        name={label ? label : \"Select\"}\n        styles={selectStyles}\n        value={multi ? selectedValues : selectedValue}\n        options={options}\n        isMulti={multi}\n        onChange={(e) => {\n\n          if (e) {\n            if (isSingleOption(e)) {\n              dispatch(setWidgetValue({ key: widgetKey, value: e.value }));\n            } else {\n              // console.log({ msg: \"values\", values: e.values() });\n              const vs = Array.from(e.values()).filter(\n                (i) => i !== undefined\n              ) as { label: string; value: string }[];\n              // console.log({\n              //   key: widgetKey,\n              // });\n              dispatch(\n                setWidgetValue({\n                  key: widgetKey,\n                  value: vs.map((i) => i.value) as string[],\n                })\n              );\n            }\n          }\n        }}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { setWidgetValue } from \"./widgetsSlice\";\nimport { Range, getTrackBackground } from \"react-range\";\n\ntype SliderProps = {\n  widgetKey: string;\n  label: string | null;\n  value: number | null;\n  min: number | null;\n  max: number | null;\n  step: number | null;\n  vertical: boolean | null;\n  disabled: boolean;\n};\n\nexport default function SliderWidget({\n  widgetKey,\n  label,\n  value,\n  min,\n  max,\n  step,\n  vertical,\n  disabled,\n}: SliderProps) {\n  const dispatch = useDispatch();\n\n  let minValue = 0;\n  let maxValue = 100;\n  let stepValue = 1;\n  if (min) {\n    minValue = min;\n  }\n  if (max) {\n    maxValue = max;\n  }\n  if (step) {\n    stepValue = step;\n  }\n  const vals: number[] = [value !== null ? value : maxValue];\n  return (\n    <div className=\"form-group mb-3\">\n      <label htmlFor={`slider-${label}`}>{label}</label>\n\n      <div\n        style={{\n          paddingTop: \"12px\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          flexWrap: \"wrap\",\n        }}\n      >\n        <Range\n          disabled={disabled}\n          values={vals}\n          step={stepValue}\n          min={minValue}\n          max={maxValue}\n          onChange={(values) => {\n            dispatch(setWidgetValue({ key: widgetKey, value: values[0] }));\n          }}\n          renderTrack={({ props, children }) => (\n            <div\n              onMouseDown={props.onMouseDown}\n              onTouchStart={props.onTouchStart}\n              style={{\n                ...props.style,\n                height: \"36px\",\n                display: \"flex\",\n                width: \"100%\",\n              }}\n            >\n              <div\n                ref={props.ref}\n                style={{\n                  height: \"5px\",\n                  width: \"100%\",\n                  borderRadius: \"4px\",\n                  background: getTrackBackground({\n                    values: vals,\n                    colors: [\n                      disabled ? \"rgba(0, 0, 0, 0.3)\" : \"#2684ff\", // \"#548BF4\",\n                      \"#ccc\",\n                    ],\n                    min: minValue,\n                    max: maxValue,\n                  }),\n                  alignSelf: \"center\",\n                }}\n              >\n                {children}\n\n                <div\n                  style={{\n                    display: \"inline-block\",\n                    width: \"100%\",\n                    fontSize: \"12px\",\n                    paddingTop: \"13px\",\n                  }}\n                >\n                  <div style={{ float: \"left\" }}>{minValue}</div>\n                  <div style={{ float: \"right\" }}>{maxValue}</div>\n                </div>\n              </div>\n            </div>\n          )}\n          renderThumb={({ props, isDragged }) => (\n            <div\n              {...props}\n              style={{\n                ...props.style,\n                height: \"18px\",\n                width: \"18px\",\n                border: \"None\",\n                borderRadius: \"4px\",\n                backgroundColor: \"#FFF\",\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                boxShadow: \"0px 2px 6px #AAA\",\n                outline: \"none\",\n              }}\n            >\n              <div\n                style={{\n                  position: \"absolute\",\n                  top: \"-24px\",\n                  color: \"#fff\",\n                  fontWeight: \"bold\",\n                  fontSize: \"12px\",\n                  fontFamily: \"Arial,Helvetica Neue,Helvetica,sans-serif\",\n                  padding: \"2px\",\n                  borderRadius: \"3px\",\n                  backgroundColor: disabled ? \"rgba(0, 0, 0, 0.3)\" : \"#2684ff\",\n                }}\n              >\n                {vals[0]}\n              </div>\n              <div\n                style={{\n                  height: \"12px\",\n                  width: \"3px\",\n                  backgroundColor: isDragged ? \"#2684ff\" : \"#CCC\",\n                }}\n              />\n            </div>\n          )}\n        />\n      </div>\n    </div>\n  );\n}\n","export interface ISelectWidget {\n  label: string | null;\n  value: string | null;\n  input: string;\n  choices: string[];\n  multi: boolean | undefined;\n}\n\nexport interface ICheckboxWidget {\n  label: string | null;\n  value: boolean | null;\n  input: string;\n}\n\nexport interface INumericWidget {\n  label: string | null;\n  value: number | null;\n  input: string;\n  min: number;\n  max: number;\n  step: number;\n}\n\nexport interface ISliderWidget {\n  vertical: boolean | null;\n  label: string | null;\n  value: number | null;\n  input: string;\n  min: number | null;\n  max: number | null;\n  step: number | null;\n}\n\nexport interface IRangeWidget {\n  vertical: boolean | null;\n  label: string | null;\n  value: [number, number] | null;\n  input: string;\n  min: number | null;\n  max: number | null;\n  step: number | null;\n}\n\nexport interface IFileWidget {\n  label: string | null;\n  value: string | null;\n  input: string;\n  maxFileSize: string | null;\n}\n\nexport interface ITextWidget {\n  label: string | null;\n  value: string | undefined;\n  input: string;\n  rows: number | null;\n}\n\nexport interface IOutputFilesWidget {\n  output: string;\n  input: null;\n  value: null;\n}\n\nexport interface IMarkdownWidget {\n  output: string;\n  input: null;  // we need to add input to be IWidget\n  value: string;\n}\n\nexport type IWidget =\n  | ISelectWidget\n  | ICheckboxWidget\n  | INumericWidget\n  | ISliderWidget\n  | IRangeWidget\n  | IFileWidget\n  | ITextWidget\n  | IOutputFilesWidget\n  | IMarkdownWidget;\n\nexport function isSelectWidget(widget: IWidget): widget is ISelectWidget {\n  return (widget as ISelectWidget).input === \"select\";\n}\n\nexport function isCheckboxWidget(widget: IWidget): widget is ICheckboxWidget {\n  return (widget as ICheckboxWidget).input === \"checkbox\";\n}\n\nexport function isNumericWidget(widget: IWidget): widget is INumericWidget {\n  return (widget as INumericWidget).input === \"numeric\";\n}\n\nexport function isSliderWidget(widget: IWidget): widget is ISliderWidget {\n  return (widget as ISliderWidget).input === \"slider\";\n}\n\nexport function isRangeWidget(widget: IWidget): widget is IRangeWidget {\n  return (widget as IRangeWidget).input === \"range\";\n}\n\nexport function isFileWidget(widget: IWidget): widget is IFileWidget {\n  return (widget as IFileWidget).input === \"file\";\n}\n\nexport function isTextWidget(widget: IWidget): widget is ITextWidget {\n  return (widget as ITextWidget).input === \"text\";\n}\n\nexport function isOutputFilesWidget(widget: IWidget): widget is IOutputFilesWidget {\n  return (widget as IOutputFilesWidget).output === \"dir\";\n}\n\nexport function isMarkdownWidget(widget: IWidget): widget is IMarkdownWidget {\n  return (widget as IMarkdownWidget).output === \"markdown\";\n}\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport axios from \"axios\";\nimport { setWidgetValue } from \"./widgetsSlice\";\n\nimport { FilePond, registerPlugin } from \"react-filepond\";\nimport FilePondPluginImageExifOrientation from \"filepond-plugin-image-exif-orientation\";\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\nimport FilePondPluginFileValidateSize from \"filepond-plugin-file-validate-size\";\n\nregisterPlugin(\n  FilePondPluginImageExifOrientation,\n  FilePondPluginImagePreview,\n  FilePondPluginFileValidateSize\n);\n\ntype FileProps = {\n  widgetKey: string;\n  label: string | null;\n  maxFileSize: string | null;\n  disabled: boolean;\n};\n\nexport default function FileWidget({\n  widgetKey,\n  label,\n  maxFileSize,\n  disabled,\n}: FileProps) {\n  const dispatch = useDispatch();\n  let fileSizeLimit = \"100MB\";\n  if (maxFileSize) {\n    fileSizeLimit = maxFileSize;\n  }\n  return (\n    <div className=\"form-group mb-3\">\n      <label htmlFor={`file-${label}`}>{label}</label>\n      <div>\n        <FilePond\n          disabled={disabled}\n          maxFileSize={fileSizeLimit}\n          onprocessfile={(error, file) => {\n            dispatch(setWidgetValue({ key: widgetKey, value: file.serverId }));\n          }}\n          server={{\n            url: `${axios.defaults.baseURL}/api/v1/fp`,\n            process: \"/process/\",\n            revert: async (uniqueFileId, load, error) => {\n              try {\n                await axios.delete(\n                  `${axios.defaults.baseURL}/api/v1/fp/revert`,\n                  {\n                    data: uniqueFileId,\n                  }\n                );\n                dispatch(setWidgetValue({ key: widgetKey, value: [] }));\n                // Should call the load method when done, no parameters required\n                load();\n              } catch (e) {\n                // Can call the error method if something is wrong, should exit after\n                error(\"Problem with uploaded file removal\");\n              }\n            },\n          }}\n          labelIdle='Drag & Drop your file or <span class=\"filepond--label-action\">Browse</span>'\n        />\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { setWidgetValue } from \"./widgetsSlice\";\n\ntype TextProps = {\n  widgetKey: string;\n  label: string | null;\n  value: string | undefined;\n  rows: number | null;\n  disabled: boolean;\n};\n\nexport default function TextWidget({\n  widgetKey,\n  label,\n  value,\n  rows,\n  disabled,\n}: TextProps) {\n  const dispatch = useDispatch();\n  let rowsValue: number = rows ? rows : 1;\n\n  const sanitizeString = (input_string: string) => {\n    return input_string.replace(/[\"'(){}[\\]`^:]/gim, \"\");\n  };\n\n  return (\n    <div className=\"form-group mb-3\">\n      <label htmlFor={`textarea-${label}`}>{label}</label>\n      {rowsValue === 1 && (\n        <input\n          className=\"form-control\"\n          type=\"text\"\n          id={`text-${label}`}\n          value={value? value: \"\"}\n          onChange={(e) => {\n            dispatch(\n              setWidgetValue({\n                key: widgetKey,\n                value: sanitizeString(e.target.value),\n              })\n            );\n          }}\n          disabled={disabled}\n        />\n      )}\n      {rowsValue > 1 && (\n        <textarea\n          className=\"form-control\"\n          id={`text-area-${label}`}\n          rows={rowsValue}\n          value={value? value: \"\"}\n          onChange={(e) => {\n            dispatch(\n              setWidgetValue({\n                key: widgetKey,\n                value: sanitizeString(e.target.value),\n              })\n            );\n          }}\n          disabled={disabled}\n        />\n      )}\n    </div>\n  );\n}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\n\nimport ReactMarkdown from \"react-markdown\";\nimport rehypeHighlight from \"rehype-highlight\";\nimport remarkGfm from \"remark-gfm\";\nimport emoji from \"remark-emoji\";\nimport rehypeRaw from \"rehype-raw\";\n\ntype MarkdownProps = {\n  value: string;\n};\n\nexport default function MarkdownWidget({ value }: MarkdownProps) {\n  return (\n    <div className=\"form-group mb-3\">\n      <ReactMarkdown\n        rehypePlugins={[remarkGfm, rehypeHighlight, emoji, rehypeRaw]}\n      >\n        {value}\n      </ReactMarkdown>\n    </div>\n  );\n}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Select from \"react-select\";\nimport {\n  getCurrentTask,\n  getExecutionHistory,\n  getHistoricTask,\n  setHistoricTask,\n} from \"../tasks/tasksSlice\";\nimport { setWidgetValue } from \"./Widgets/widgetsSlice\";\ntype SingleOption = { value: string; label: string };\n\ntype Props = {\n  disabled: boolean;\n};\n\nexport default function SelectExecutionHistory({ disabled }: Props) {\n  const dispatch = useDispatch();\n  const executionHistory = useSelector(getExecutionHistory);\n  const historicTask = useSelector(getHistoricTask);\n  const currentTask = useSelector(getCurrentTask);\n\n  useEffect(() => {\n    if (executionHistory.length > 0) {\n      let lastHistoricTask = executionHistory[executionHistory.length - 1];\n\n      if (!historicTask.id && currentTask.id === lastHistoricTask.id) {\n        for (let [key, value] of Object.entries(\n          JSON.parse(currentTask.params)\n        )) {\n          if (value !== null) {\n            dispatch(setWidgetValue({ key, value }));\n          }\n        }\n      }\n    }\n  }, [dispatch, executionHistory, historicTask, currentTask]);\n\n  if (executionHistory.length === 0) return <div></div>;\n\n  const selectStyles = {\n    menu: (base: any) => ({\n      ...base,\n      zIndex: 100,\n    }),\n  };\n\n  let selectedValue: SingleOption = { value: \"\", label: \"\" };\n\n  let count = 1;\n  let options: { value: string; label: string }[] = executionHistory.map(\n    (run) => {\n      let choice = `Run ${count}`;\n      count += 1;\n      if (historicTask.id) {\n        if (historicTask.id && historicTask.id === run.id) {\n          selectedValue = { value: `${count - 2}`, label: choice };\n        }\n      } else {\n        selectedValue = { value: `${count - 2}`, label: choice };\n      }\n      return { value: `${count - 2}`, label: choice };\n    }\n  );\n\n  return (\n    <div>\n      <div className=\"form-group mb-3\">\n        <label htmlFor=\"select-execution-history\">Execution history</label>\n        <Select\n          id=\"select-execution-history\"\n          isDisabled={disabled}\n          name={\"Select\"}\n          styles={selectStyles}\n          value={selectedValue}\n          options={options}\n          isMulti={false}\n          onChange={(e) => {\n            if (e) {\n              let historical = executionHistory[parseInt(e.value)];\n              dispatch(setHistoricTask(historical));\n              for (let [key, value] of Object.entries(\n                JSON.parse(historical.params)\n              )) {\n                if (value !== null) {\n                  dispatch(setWidgetValue({ key, value }));\n                }\n              }\n            }\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport { clearTasks, copyCurrentToPreviousTask, executeNotebook, exportToPDF } from \"../tasks/tasksSlice\";\nimport CheckboxWidget from \"./Widgets/Checkbox\";\nimport NumericWidget from \"./Widgets/Numeric\";\nimport RangeWidget from \"./Widgets/Range\";\nimport SelectWidget from \"./Widgets/Select\";\nimport SliderWidget from \"./Widgets/Slider\";\n\nimport {\n  isCheckboxWidget,\n  isFileWidget,\n  isNumericWidget,\n  isRangeWidget,\n  isSelectWidget,\n  isSliderWidget,\n  isTextWidget,\n  isMarkdownWidget,\n  IWidget,\n} from \"./Widgets/Types\";\nimport { getWidgetsValues, setWidgetValue } from \"./Widgets/widgetsSlice\";\nimport FileWidget from \"./Widgets/File\";\nimport TextWidget from \"./Widgets/Text\";\nimport { fetchNotebook } from \"./Notebooks/notebooksSlice\";\nimport { setShowSideBar, setView } from \"../views/appSlice\";\nimport { handleDownload } from \"../utils\";\nimport MarkdownWidget from \"./Widgets/Markdown\";\nimport SelectExecutionHistory from \"./SelectExecutionHistory\";\n\ntype SideBarProps = {\n  notebookTitle: string;\n  notebookId: number;\n  notebookSchedule: string;\n  taskCreatedAt: Date;\n  loadingState: string;\n  waiting: boolean;\n  widgetsParams: Array<IWidget>;\n  watchMode: boolean;\n  notebookPath: string;\n  displayEmbed: boolean;\n  showFiles: boolean;\n  isPresentation: boolean;\n  notebookParseErrors: string;\n};\n\nexport default function SideBar({\n  notebookTitle,\n  notebookId,\n  notebookSchedule,\n  taskCreatedAt,\n  loadingState,\n  waiting,\n  widgetsParams,\n  watchMode,\n  notebookPath,\n  displayEmbed,\n  showFiles,\n  isPresentation,\n  notebookParseErrors,\n}: SideBarProps) {\n  const dispatch = useDispatch();\n  const widgetsValues = useSelector(getWidgetsValues);\n\n  useEffect(() => {\n    if (widgetsParams) {\n      for (let [key, widgetParams] of Object.entries(widgetsParams)) {\n        if (widgetParams.input === \"file\") {\n          dispatch(setWidgetValue({ key, value: [] as string[] }));\n        } else if (widgetParams.input === \"text\") {\n          dispatch(\n            setWidgetValue({\n              key,\n              value: widgetParams.value ? widgetParams.value : \"\",\n            })\n          );\n        } else if (isMarkdownWidget(widgetParams)) {\n          // do nothing\n          // dont put value into store\n        } else {\n          dispatch(setWidgetValue({ key, value: widgetParams.value }));\n        }\n      }\n    }\n  }, [dispatch, widgetsParams]);\n\n  let widgets = [];\n  let fileKeys = [] as string[]; // keys to file widgets, all need to be selected to enable RUN button\n  if (widgetsParams) {\n    for (let [key, widgetParams] of Object.entries(widgetsParams)) {\n      if (isSelectWidget(widgetParams)) {\n        widgets.push(\n          <SelectWidget\n            widgetKey={key}\n            disabled={waiting}\n            label={widgetParams?.label}\n            value={widgetsValues[key] as string}\n            choices={widgetParams?.choices}\n            multi={widgetParams?.multi}\n            key={key}\n          />\n        );\n      } else if (isCheckboxWidget(widgetParams)) {\n        widgets.push(\n          <CheckboxWidget\n            widgetKey={key}\n            disabled={waiting}\n            label={widgetParams?.label}\n            value={widgetsValues[key] as boolean}\n            key={key}\n          />\n        );\n      } else if (isNumericWidget(widgetParams)) {\n        widgets.push(\n          <NumericWidget\n            widgetKey={key}\n            disabled={waiting}\n            label={widgetParams?.label}\n            value={widgetsValues[key] as number}\n            min={widgetParams?.min}\n            max={widgetParams?.max}\n            step={widgetParams?.step}\n            key={key}\n          />\n        );\n      } else if (isSliderWidget(widgetParams)) {\n        widgets.push(\n          <SliderWidget\n            widgetKey={key}\n            disabled={waiting}\n            label={widgetParams?.label}\n            value={widgetsValues[key] as number}\n            min={widgetParams?.min}\n            max={widgetParams?.max}\n            step={widgetParams?.step}\n            vertical={widgetParams?.vertical}\n            key={key}\n          />\n        );\n      } else if (isRangeWidget(widgetParams)) {\n        widgets.push(\n          <RangeWidget\n            widgetKey={key}\n            disabled={waiting}\n            label={widgetParams?.label}\n            value={widgetsValues[key] as [number, number]}\n            min={widgetParams?.min}\n            max={widgetParams?.max}\n            step={widgetParams?.step}\n            vertical={widgetParams?.vertical}\n            key={key}\n          />\n        );\n      } else if (isFileWidget(widgetParams)) {\n        widgets.push(\n          <FileWidget\n            widgetKey={key}\n            disabled={waiting}\n            label={widgetParams?.label}\n            maxFileSize={widgetParams?.maxFileSize}\n            key={key}\n          />\n        );\n        fileKeys.push(key);\n      } else if (isTextWidget(widgetParams)) {\n        widgets.push(\n          <TextWidget\n            widgetKey={key}\n            disabled={waiting}\n            label={widgetParams?.label}\n            value={widgetsValues[key] as string}\n            rows={widgetParams?.rows}\n            key={key}\n          />\n        );\n      } else if (isMarkdownWidget(widgetParams)) {\n        widgets.push(\n          <MarkdownWidget value={widgetParams.value as string} key={key} />\n        );\n      }\n    }\n  }\n\n  const allFilesUploaded = () => {\n    if (fileKeys.length === 0) {\n      // no files at all, so OK\n      return true;\n    }\n    for (const key of fileKeys) {\n      if (!Object.prototype.hasOwnProperty.call(widgetsValues, key)) {\n        return false;\n      }\n      let files = widgetsValues[key] as string[];\n      if (files.length === 0) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  let additionalStyle = {};\n  if (displayEmbed) {\n    additionalStyle = { padding: \"0px\" };\n  }\n\n  return (\n    <nav\n      id=\"sidebarMenu\"\n      className=\"col-lg-3 d-md-block bg-light sidebar\"\n      style={{ ...additionalStyle, overflowY: \"auto\" }}\n    >\n      <div className=\"position-sticky p-3\">\n        <h4>\n          {notebookTitle}\n          <button\n            className=\"btn btn-sm  btn-outline-primary\"\n            type=\"button\"\n            style={{\n              float: \"right\",\n              zIndex: \"101\",\n            }}\n            onClick={() => dispatch(setShowSideBar(false))}\n            data-toggle=\"tooltip\"\n            data-placement=\"right\"\n            title=\"Hide sidebar\"\n          >\n            <i className=\"fa fa-chevron-left\" aria-hidden=\"true\" />\n          </button>\n        </h4>\n\n        <div style={{ padding: \"0px\" }}>\n          <form>\n            {widgets}\n\n            <div className=\"form-group mb-3\">\n              <button\n                type=\"button\"\n                className=\"btn btn-success\"\n                style={{ marginRight: \"10px\", width: \"47%\" }}\n                onClick={() => {\n                  // copy current task to previous task\n                  // previous task is used for display\n                  // during wait for new results\n                  dispatch(copyCurrentToPreviousTask());\n                  // execute the notebook with new parameters\n                  dispatch(executeNotebook(notebookId));\n                }}\n                disabled={waiting || !allFilesUploaded()}\n              >\n                <i className=\"fa fa-play\" aria-hidden=\"true\"></i> Run\n              </button>\n\n              <div\n                className=\"dropdown\"\n                style={{ width: \"47%\", float: \"right\" }}\n              >\n                <button\n                  className=\"btn btn-primary dropdown-toggle\"\n                  style={{ margin: \"0px\", width: \"100%\" }}\n                  type=\"button\"\n                  data-bs-toggle=\"dropdown\"\n                  disabled={waiting}\n                >\n                  Download\n                </button>\n\n                <ul className=\"dropdown-menu dropdown-menu-end\">\n                  <li>\n                    <a\n                      style={{ cursor: \"pointer\" }}\n                      className=\"dropdown-item\"\n                      onClick={() => {\n                        handleDownload(\n                          `${axios.defaults.baseURL}${notebookPath}`,\n                          `${notebookTitle}.html`\n                        );\n                      }}\n                    >\n                      <i className=\"fa fa-file-code-o\" aria-hidden=\"true\"></i>{\" \"}\n                      Download as HTML\n                    </a>\n                  </li>\n                  <li>\n                    <hr className=\"dropdown-divider\" />\n                  </li>\n                  <li>\n                    <button\n                      type=\"button\"\n                      className=\"dropdown-item\"\n                      onClick={() => {\n                        dispatch(exportToPDF(notebookId, notebookPath));\n                      }}\n                    >\n                      <i className=\"fa fa-file-pdf-o\" aria-hidden=\"true\"></i>{\" \"}\n                      Download as PDF\n                    </button>\n                  </li>\n                </ul>\n              </div>\n            </div>\n\n            {fileKeys && !allFilesUploaded() && (\n              <div className=\"alert alert-danger mb-3\" role=\"alert\">\n                <i className=\"fa fa-file\" aria-hidden=\"true\"></i> Please upload\n                all required files.\n              </div>\n            )}\n\n            {notebookTitle === \"Please provide title\" && (\n              <div className=\"alert alert-warning mb-3\" role=\"alert\">\n                <i\n                  className=\"fa fa-exclamation-triangle\"\n                  aria-hidden=\"true\"\n                ></i>{\" \"}\n                <b>\n                  Please add YAML config to your notebook as a first raw cell.\n                </b>\n                <br />\n                <br />\n                Example:\n                <pre>\n                  ---\n                  <br />\n                  title: Report title\n                  <br />\n                  author: Your name\n                  <br />\n                  description: My amazing report\n                  <br />\n                  ---\n                </pre>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-primary\"\n                  onClick={() =>\n                    window.open(\n                      \"https://github.com/mljar/mercury#convert-notebook-to-web-app-with-yaml\",\n                      \"_blank\"\n                    )\n                  }\n                >\n                  <i className=\"fa fa-book\" aria-hidden=\"true\"></i> Read more\n                </button>\n              </div>\n            )}\n\n            {notebookSchedule !== \"\" && (\n              <div className=\"alert alert-success mb-3\" role=\"alert\">\n                <p>\n                  <i className=\"fa fa-clock-o\" aria-hidden=\"true\"></i> Scheduled\n                  notebook at '{notebookSchedule}'.\n                </p>\n\n                {taskCreatedAt && (\n                  <p>\n                    {\" \"}\n                    <i className=\"fa fa-calendar\" aria-hidden=\"true\"></i> Last\n                    execution at {taskCreatedAt}.\n                  </p>\n                )}\n                <div>\n                  <i className=\"fa fa-refresh\" aria-hidden=\"true\"></i> Website\n                  refresh every minute.\n                </div>\n              </div>\n            )}\n\n            {waiting && (\n              <div className=\"alert alert-primary mb-3\" role=\"alert\">\n                <i className=\"fa fa-cogs\" aria-hidden=\"true\"></i> Notebook is\n                executed. Please wait.\n              </div>\n            )}\n            {watchMode && (\n              <div className=\"alert alert-secondary mb-3\" role=\"alert\">\n                <i className=\"fa fa-refresh\" aria-hidden=\"true\"></i> Notebook in\n                watch mode. All changes to Notebook will be automatically\n                visible in Mercury.\n              </div>\n            )}\n\n            {isPresentation && (\n              <div className=\"alert alert-primary mb-3\" role=\"alert\">\n                <i className=\"fa fa-television\" aria-hidden=\"true\"></i> Click on\n                presentation and press <b>F</b> for full screen. Press{\" \"}\n                <b>Esc</b> to quit.\n                <br />\n                <br />\n                <i className=\"fa fa-arrows\" aria-hidden=\"true\"></i> Click on\n                presentation and press <b>Esc</b> to navigate slides.\n              </div>\n            )}\n\n            {notebookParseErrors && (\n              <div className=\"alert alert-danger mb-3\" role=\"alert\">\n                <i className=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>{\" \"}\n                <b>Errors in the YAML</b>\n                <br />\n                {notebookParseErrors}\n              </div>\n            )}\n          </form>\n        </div>\n\n        <hr style={{ marginTop: \"50px\", marginBottom: \"20px\" }} />\n        <div>\n          {!watchMode && <SelectExecutionHistory disabled={waiting} />}\n          <button\n            className=\"btn btn-sm btn-outline-danger\"\n            onClick={() => {\n              dispatch(clearTasks(notebookId));\n              dispatch(fetchNotebook(notebookId));\n            }}\n            style={{ border: \"none\" }}\n            disabled={waiting}\n            title=\"Click to clear all previous runs of the notebook\"\n          >\n            <i className=\"fa fa-times-circle\" aria-hidden=\"true\"></i> Clear runs\n          </button>\n        </div>\n        {showFiles && (\n          <div>\n            <hr />\n            <button\n              className=\"btn btn-sm btn-outline-secondary\"\n              style={{\n                border: \"none\",\n                //fontWeight: 500,\n              }}\n              onClick={() => {\n                dispatch(setView(\"app\"));\n              }}\n            >\n              <i className=\"fa fa-laptop\" aria-hidden=\"true\"></i> App\n            </button>\n\n            <button\n              className=\"btn btn-sm btn-outline-secondary\"\n              style={{\n                border: \"none\",\n                //fontWeight: 500,\n              }}\n              onClick={() => {\n                dispatch(setView(\"files\"));\n              }}\n            >\n              <i className=\"fa fa-folder-open-o\" aria-hidden=\"true\"></i> Output\n              Files\n            </button>\n          </div>\n        )}\n      </div>\n    </nav>\n  );\n}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport axios from \"axios\";\nimport useWindowDimensions from \"./WindowDimensions\";\n\nimport BlockUi from \"react-block-ui\";\n\ntype MainViewProps = {\n  loadingState: string;\n  notebookPath: string;\n  waiting: boolean;\n  errorMsg: string;\n  watchMode: boolean;\n  displayEmbed: boolean;\n  isPro: boolean;\n  username: string;\n  slidesHash: string;\n  columnsWidth: number;\n};\n\nexport default function MainView({\n  loadingState,\n  notebookPath,\n  waiting,\n  errorMsg,\n  watchMode,\n  displayEmbed,\n  isPro,\n  username,\n  slidesHash,\n  columnsWidth,\n}: MainViewProps) {\n  const { height } = useWindowDimensions();\n\n  const iframeHeight = displayEmbed ? height - 10 : height - 58;\n\n  return (\n    <main\n      className={`ms-sm-auto col-lg-${columnsWidth}`}\n      style={{ paddingTop: \"0px\", paddingRight: \"0px\", paddingLeft: \"0px\" }}\n    >\n      <BlockUi tag=\"div\" blocking={waiting}>\n        <div>\n          {loadingState === \"loading\" && !watchMode && (\n            <p>Loading notebook. Please wait ...</p>\n          )}\n          {loadingState === \"error\" && !isPro && (\n            <p style={{ margin: \"20px\" }}>\n              Problem while loading notebook. Please try again later or contact\n              Mercury administrator.\n            </p>\n          )}\n\n          {loadingState === \"error\" && isPro && username === \"\" && (\n            <p style={{ margin: \"20px\" }}>\n              <h5>Please log in to see the notebook</h5>\n              <a href=\"/login\" className=\"btn btn-primary btn-sm \">\n                <i className=\"fa fa-sign-in\" aria-hidden=\"true\"></i> Log in\n              </a>\n            </p>\n          )}\n\n          {loadingState === \"error\" && isPro && username !== \"\" && (\n            <p style={{ margin: \"20px\" }}>\n              Problem while loading notebook. Please try again later or contact\n              Mercury administrator.\n            </p>\n          )}\n          {/* {waiting && (\n          <div className=\"alert alert-primary mb-3\" role=\"alert\">\n            Notebook is executed. Default notebook is presented below. New\n            results will be loaded after execution.{\" \"}\n            <i className=\"fa fa-coffee\" aria-hidden=\"true\"></i> Please wait ...\n          </div>\n        )} */}\n          {errorMsg && (\n            <div className=\"alert alert-danger mb-3\" role=\"alert\">\n              <b>Notebook is executed with errors.</b>\n              <p>{errorMsg}</p>\n            </div>\n          )}\n\n          {errorMsg === \"\" && loadingState !== \"loading\" && (\n            <iframe\n              width=\"100%\"\n              height={iframeHeight}\n              key={notebookPath}\n              src={`${axios.defaults.baseURL}${notebookPath}${slidesHash}`}\n              title=\"display\"\n              id=\"main-iframe\"\n            ></iframe>\n          )}\n        </div>\n      </BlockUi>\n    </main>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchCurrentTask } from \"../tasks/tasksSlice\";\n\nimport {\n  fetchNotebook,\n  getSelectedNotebook,\n  getWatchModeCounter,\n} from \"./Notebooks/notebooksSlice\";\n\ntype Props = {\n  notebookId: number;\n};\n\nfunction WatchMode({ notebookId }: Props) {\n  const dispatch = useDispatch();\n  const notebook = useSelector(getSelectedNotebook);\n  const watchModeCounter = useSelector(getWatchModeCounter);\n\n  useEffect(() => {\n    if (\n      notebook.state === \"WATCH_READY\" ||\n      notebook.state === \"WATCH_WAIT\" ||\n      notebook.state === \"WATCH_ERROR\"\n    ) {\n      setTimeout(() => {\n        dispatch(fetchNotebook(notebookId, true));\n        dispatch(fetchCurrentTask(notebookId));\n      }, 2000);\n    }\n  }, [dispatch, notebook, notebookId, watchModeCounter]);\n\n  return <div></div>;\n}\n\nconst WatchModeComponent = WatchMode;\nexport default WatchModeComponent;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport axios from \"axios\";\nimport fileDownload from \"js-file-download\";\nimport BlockUi from \"react-block-ui\";\nimport { setView } from \"../views/appSlice\";\n\ntype FilesViewProps = {\n  files: string[];\n  filesState: string;\n  waiting: boolean;\n};\n\nexport default function FilesView({\n  files,\n  filesState,\n  waiting,\n}: FilesViewProps) {\n  const dispatch = useDispatch();\n\n  const handleDownload = (url: string, filename: string) => {\n    axios\n      .get(url, {\n        responseType: \"blob\",\n      })\n      .then((res) => {\n        fileDownload(res.data, filename);\n      });\n  };\n\n  let filesLinks = [];\n\n  for (let f of files) {\n    let fname = f.split(\"/\").pop();\n    if (f && fname) {\n      filesLinks.push(\n        <div key={f}>\n          <i\n            className=\"fa fa-file-text-o\"\n            aria-hidden=\"true\"\n            style={{ paddingRight: \"5px\" }}\n          ></i>{\" \"}\n          <b>{fname}</b>\n          <button\n            style={{ float: \"right\" }}\n            type=\"button\"\n            className=\"btn btn-primary\"\n            onClick={() =>\n              handleDownload(`${axios.defaults.baseURL}${f}`, fname!)\n            }\n          >\n            <i className=\"fa fa-download\" aria-hidden=\"true\"></i> Download\n          </button>\n          <hr />\n        </div>\n      );\n    }\n  }\n\n  return (\n    <main className=\"col-md-9 ms-sm-auto col-lg-9\" style={{ padding: \"20px\" }}>\n      <div className=\"col-8\">\n        <h3 style={{ paddingBottom: \"10px\" }}>\n          <i className=\"fa fa-folder-open-o\" aria-hidden=\"true\"></i> Output Files\n        </h3>\n        <BlockUi tag=\"div\" blocking={waiting}>\n          <div>\n            {filesState === \"loaded\" && filesLinks}\n            {filesState === \"unknown\" && (\n              <p>Please run the notebook to produce output files ...</p>\n            )}\n            {filesState === \"loading\" && <p>Loading files please wait ...</p>}\n            {filesState === \"error\" && (\n              <div className=\"alert alert-danger mb-3\" role=\"alert\">\n                There was an error during loading files. Please try to run the\n                app again or contact the administrator.\n              </div>\n            )}\n          </div>\n        </BlockUi>\n      </div>\n\n      <button\n        className=\"btn btn-secondary btn-sm\"\n        // style={{ background: \"transparent\", border: \"none\", fontSize: \"0.9em\" }}\n        onClick={() => {\n          dispatch(setView(\"app\"));\n        }}\n      >\n        <i className=\"fa fa-arrow-left\" aria-hidden=\"true\"></i> Back to App\n      </button>\n    </main>\n  );\n}\n","import React from \"react\";\n\nexport default function MadeWithDiv() {\n  return (\n    <a href=\"https://mljar.com/mercury\" target=\"_blank\" rel=\"noreferrer\">\n      <div className=\"poweredby\">\n        {/* <div className=\"text-muted text-center\"> Made with </div> */}\n        <div>\n          <img\n            alt=\"Mercury\"\n            src={\n              process.env.PUBLIC_URL +\n              process.env.REACT_APP_LOCAL_URL +\n              \"/mercury_logo.svg\"\n            }\n            style={{ height: \"20px\" }}\n          />\n        </div>\n      </div>\n    </a>\n  );\n}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { IWidget } from \"./Widgets/Types\";\nimport { useSelector } from \"react-redux\";\nimport { getWidgetsValues } from \"./Widgets/widgetsSlice\";\n\ntype Props = {\n  slug: string;\n  widgetsParams: Array<IWidget>;\n  notebookPath: string;\n  columnsWidth: number;\n  taskSessionId: string | undefined;\n};\n\nexport default function RestAPIView({\n  slug,\n  widgetsParams,\n  notebookPath,\n  columnsWidth,\n  taskSessionId,\n}: Props) {\n  const [response, setResponse] = useState(JSON.stringify({ \"msg\": \"Example output\" }))\n  const widgetsValues = useSelector(getWidgetsValues);\n\n  let examplePostData = {} as Record<string, string | number | null | undefined | boolean | [number, number] | string[] | unknown>;\n  for (let [key, widgetParams] of Object.entries(widgetsParams)) {\n    if (widgetParams.input) {\n      examplePostData[key] = widgetsValues[key];\n    }\n  }\n\n  async function fetchResponse() {\n    try {\n      const { data } = await axios.get(`get/${taskSessionId}`);\n      setResponse(JSON.stringify(data));\n    } catch (error) { }\n  }\n\n  useEffect(() => {\n    if (taskSessionId) {\n      fetchResponse();\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [taskSessionId, notebookPath]);\n\n  let sessionId = \"id-with-some-random-string\";\n  if (taskSessionId) {\n    sessionId = taskSessionId;\n  }\n\n  let postRequest = `curl -X POST -H \"Content-Type: application/json\" -d '${JSON.stringify(examplePostData)}' ${axios.defaults.baseURL}/run/${slug}`;\n  return (\n    <div\n      className={`ms-sm-auto col-lg-${columnsWidth}`}\n      style={{ border: \"none\", paddingTop: \"0px\", paddingRight: \"0px\", paddingLeft: \"0px\", padding: \"10px\" }}>\n      <h4>Notebook as REST API</h4>\n      <p>This notebook can be executed as REST API.\n        Please see the examples below on how to access the notebook.</p>\n\n      <div className=\"alert alert-secondary\" role=\"alert\">\n        <h5>POST request to execute the notebook</h5>\n        <textarea disabled style={{ width: \"100%\" }} rows={3} value={postRequest}>\n        </textarea>\n        The above request should return a JSON with `id`. The `id` should be used in the GET request to fetch the result.\n\n        <br />\n        Example response:\n        <pre>{`{\"id\": \"${sessionId}\"}`}</pre>\n\n      </div>\n      <div className=\"alert alert-secondary\" role=\"alert\">\n        <h5>GET request to get execution result in JSON</h5>\n        <textarea disabled style={{ width: \"100%\" }} rows={1} value={`curl ${axios.defaults.baseURL}/get/${sessionId}`}></textarea>\n      </div>\n\n      <div className=\"alert alert-primary\" role=\"alert\">\n        <h5>Response</h5>\n        <pre>\n          {response}\n        </pre>\n      </div>\n\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchCurrentTask } from \"../tasks/tasksSlice\";\n\nimport { fetchNotebook, getSelectedNotebook } from \"./Notebooks/notebooksSlice\";\n\ntype Props = {\n  notebookId: number;\n};\n\nexport default function AutoRefresh({ notebookId }: Props) {\n  const dispatch = useDispatch();\n  const notebook = useSelector(getSelectedNotebook);\n\n  useEffect(() => {\n    setTimeout(() => {\n      dispatch(fetchNotebook(notebookId, true));\n      dispatch(fetchCurrentTask(notebookId));\n    }, 60000); // every 1 minute\n  }, [dispatch, notebookId, notebook]);\n\n  return <div></div>;\n}\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { getExportingToPDF, getExportToPDFCounter, getExportToPDFJobId, getPDF, stopPDFExport } from \"../tasks/tasksSlice\";\n\nexport default function WaitPDFExport() {\n  const dispatch = useDispatch();\n  const counter = useSelector(getExportToPDFCounter);\n  const jobId = useSelector(getExportToPDFJobId);\n  const exportingPDF = useSelector(getExportingToPDF);\n\n  useEffect(() => {\n    if(jobId === '') {\n      return;\n    } \n    if(!exportingPDF) {\n      return;\n    }\n    // raise error after 2 minutes of waiting ...\n    if (counter < 120) {\n      setTimeout(() => {\n        dispatch(getPDF(jobId));\n      }, 1000); // every 1 second\n    } else {\n      dispatch(stopPDFExport());\n      toast.error(\"Problem with PDF export. Please try again later or ask your admin for help.\", { autoClose: 6000 })\n    }\n  }, [dispatch, counter, jobId, exportingPDF]);\n\n  return <div></div>;\n}\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./App.css\";\nimport NavBar from \"../components/NavBar\";\nimport SideBar from \"../components/SideBar\";\nimport MainView from \"../components/MainView\";\n\nimport {\n  fetchNotebook,\n  getLoadingStateSelected,\n  getSelectedNotebook,\n  getSlidesHash,\n  // getWatchModeCounter,\n} from \"../components/Notebooks/notebooksSlice\";\nimport {\n  fetchCurrentTask,\n  fetchExecutionHistory,\n  getCurrentTask,\n  getExportingToPDF,\n  getHistoricTask,\n  getPreviousTask,\n  ITask,\n  setPreviousTask,\n} from \"../tasks/tasksSlice\";\nimport WatchModeComponent from \"../components/WatchMode\";\nimport { isOutputFilesWidget, IWidget } from \"../components/Widgets/Types\";\nimport {\n  fetchOutputFiles,\n  getOutputFiles,\n  getOutputFilesState,\n  getShowSideBar,\n  getView,\n  setShowSideBar,\n} from \"./appSlice\";\nimport FilesView from \"../components/FilesView\";\nimport { getToken, getUsername } from \"../components/authSlice\";\nimport { getIsPro } from \"../components/versionSlice\";\nimport MadeWithDiv from \"../components/MadeWithDiv\";\nimport RestAPIView from \"../components/RestAPIView\";\nimport AutoRefresh from \"../components/AutoRefresh\";\nimport BlockUi from \"react-block-ui\";\nimport WaitPDFExport from \"../components/WaitPDFExport\";\n\ntype AppProps = {\n  isSingleApp: boolean;\n  notebookId: number;\n  displayEmbed: boolean;\n};\n\nfunction App({ isSingleApp, notebookId, displayEmbed }: AppProps) {\n  const dispatch = useDispatch();\n  const notebook = useSelector(getSelectedNotebook);\n  const loadingState = useSelector(getLoadingStateSelected);\n  const task = useSelector(getCurrentTask);\n  const historicTask = useSelector(getHistoricTask);\n  const previousTask = useSelector(getPreviousTask);\n  const appView = useSelector(getView);\n  const outputFiles = useSelector(getOutputFiles);\n  const outputFilesState = useSelector(getOutputFilesState);\n  const isPro = useSelector(getIsPro);\n  const username = useSelector(getUsername);\n  const token = useSelector(getToken);\n  const slidesHash = useSelector(getSlidesHash);\n  const showSideBar = useSelector(getShowSideBar);\n  const exportingToPDF = useSelector(getExportingToPDF);\n\n  const waitForTask = () => {\n    if (task.state && task.state === \"CREATED\") return true;\n    if (task.state && task.state === \"RECEIVED\") return true;\n    return false;\n  };\n\n  const isWatchMode = () => {\n    return (\n      notebook.state === \"WATCH_READY\" ||\n      notebook.state === \"WATCH_WAIT\" ||\n      notebook.state === \"WATCH_ERROR\"\n    );\n  };\n\n  useEffect(() => {\n    dispatch(fetchNotebook(notebookId));\n    dispatch(fetchCurrentTask(notebookId));\n    dispatch(fetchExecutionHistory(notebookId));\n    dispatch(setPreviousTask({} as ITask));\n  }, [dispatch, notebookId, token]);\n\n  useEffect(() => {\n    if (waitForTask()) {\n      setTimeout(() => {\n        dispatch(fetchCurrentTask(notebookId));\n        dispatch(fetchExecutionHistory(notebookId, false));\n      }, 1000);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, task, notebookId]);\n\n  // useEffect(() => {\n  //   if (isWatchMode()) {\n  //     setTimeout(() => {\n  //       dispatch(fetchNotebook(notebookId));\n  //     }, 2000);\n  //   }\n  //   // eslint-disable-next-line react-hooks/exhaustive-deps\n  // }, [dispatch, notebook, watchModeCounter]);\n\n  useEffect(() => {\n    if (\n      appView === \"files\" &&\n      task.id &&\n      task.state &&\n      task.state === \"DONE\" &&\n      task.result\n    ) {\n      dispatch(fetchOutputFiles(task.id));\n    }\n  }, [dispatch, appView, task.id, task.state, task.result]);\n\n  let notebookPath = notebook.default_view_path;\n  if (task.state && task.state === \"DONE\" && task.result) {\n    notebookPath = task.result;\n  }\n  let errorMsg = \"\";\n  if (task.state && task.result && task.state === \"ERROR\") {\n    errorMsg = task.result;\n  }\n\n  // set historic task to display if available\n  if (\n    historicTask.state &&\n    historicTask.state === \"DONE\" &&\n    historicTask.result\n  ) {\n    notebookPath = historicTask.result;\n  }\n  if (\n    historicTask.state &&\n    historicTask.result &&\n    historicTask.state === \"ERROR\"\n  ) {\n    errorMsg = historicTask.result;\n  }\n\n  // if we have previous task to show, just show it\n  if (\n    notebookPath === notebook.default_view_path &&\n    previousTask.state &&\n    previousTask.state === \"DONE\" &&\n    previousTask.result\n  ) {\n    notebookPath = previousTask.result;\n  }\n\n  const areOutputFilesAvailable = (widgetsParams: IWidget[]): boolean => {\n    if (widgetsParams) {\n      for (let [, widgetParams] of Object.entries(widgetsParams)) {\n        if (isOutputFilesWidget(widgetParams)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  let showRestApi = false;\n  if (notebook.output && notebook.output.toLowerCase().startsWith(\"rest\")) {\n    showRestApi = true;\n  }\n\n  return (\n    <div className=\"App\">\n      {!displayEmbed && <NavBar isPro={isPro} username={username} />}\n      <BlockUi\n        blocking={exportingToPDF}\n        message=\"Exporting to PDF. Please wait ...\"\n      >\n        {exportingToPDF && <WaitPDFExport />}\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <WatchModeComponent notebookId={notebookId} />\n\n            {notebook.schedule !== undefined && notebook.schedule !== \"\" && (\n              <AutoRefresh notebookId={notebookId} />\n            )}\n\n            {showSideBar && (\n              <SideBar\n                notebookTitle={notebook.title}\n                notebookId={notebookId}\n                notebookSchedule={notebook.schedule}\n                taskCreatedAt={task.created_at}\n                loadingState={loadingState}\n                waiting={waitForTask()}\n                widgetsParams={notebook?.params?.params}\n                watchMode={isWatchMode()}\n                notebookPath={notebookPath}\n                displayEmbed={displayEmbed}\n                showFiles={areOutputFilesAvailable(notebook?.params?.params)}\n                isPresentation={\n                  notebook.output !== undefined && notebook.output === \"slides\"\n                }\n                notebookParseErrors={notebook.errors}\n              />\n            )}\n\n            {!showSideBar && (\n              <div>\n                <button\n                  className=\"btn btn-sm  btn-outline-primary\"\n                  type=\"button\"\n                  style={{\n                    position: \"absolute\",\n                    top: displayEmbed ? \"5px\" : \"50px\",\n                    left: \"5px\",\n                    zIndex: \"100\",\n                  }}\n                  onClick={() => dispatch(setShowSideBar(true))}\n                  data-toggle=\"tooltip\"\n                  data-placement=\"right\"\n                  title=\"Show sidebar\"\n                >\n                  <i className=\"fa fa-chevron-right\" aria-hidden=\"true\" />\n                </button>\n              </div>\n            )}\n\n            {showRestApi && (\n              <RestAPIView\n                slug={notebook.slug}\n                widgetsParams={notebook?.params?.params}\n                notebookPath={notebookPath}\n                columnsWidth={showSideBar ? 9 : 12}\n                taskSessionId={task.session_id}\n              />\n            )}\n            {appView === \"app\" && (\n              <MainView\n                loadingState={loadingState}\n                notebookPath={notebookPath}\n                errorMsg={errorMsg}\n                waiting={waitForTask()}\n                watchMode={isWatchMode()}\n                displayEmbed={displayEmbed}\n                isPro={isPro}\n                username={username}\n                slidesHash={slidesHash}\n                columnsWidth={showSideBar ? 9 : 12}\n              />\n            )}\n            {appView === \"files\" && (\n              <FilesView\n                files={outputFiles}\n                filesState={outputFilesState}\n                waiting={waitForTask()}\n              />\n            )}\n          </div>\n        </div>\n      </BlockUi>\n      {displayEmbed && <MadeWithDiv />}\n    </div>\n  );\n}\n\nconst AppView = App;\nexport default AppView;\n","/* eslint react/jsx-props-no-spreading: off */\nimport React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { setToken, setUsername } from \"./components/authSlice\";\nimport { fetchVersion } from \"./components/versionSlice\";\nimport { getSessionId } from \"./utils\";\n\nimport AppView from \"./views/AppView\";\n\nexport default function Routes() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    getSessionId();\n    dispatch(fetchVersion());\n    if (localStorage.getItem(\"token\")) {\n      dispatch(setToken(localStorage.getItem(\"token\")));\n    }\n    if (localStorage.getItem(\"username\")) {\n      dispatch(setUsername(localStorage.getItem(\"username\")));\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <AppView isSingleApp={true} notebookId={1} displayEmbed={true} />\n  );\n}","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { History } from \"history\";\nimport { Store } from \"./store\";\nimport Routes from \"./Routes\";\nimport SingleRoute from \"./SingleRoute\";\n\ntype Props = {\n  store: Store;\n  history: History;\n};\nconst Root = ({ store, history }: Props) => (\n  <Provider store={store}>\n    <SingleRoute />\n  </Provider>\n);\n\nexport default Root;\n","/* eslint-disable import/no-cycle */\nimport { configureStore, getDefaultMiddleware, Action } from '@reduxjs/toolkit';\nimport { createBrowserHistory } from 'history';\n\nimport { ThunkAction } from 'redux-thunk';\nimport createRootReducer from './rootReducer';\n\nexport const history = createBrowserHistory();\nconst rootReducer = createRootReducer(history);\nexport type RootState = ReturnType<typeof rootReducer>;\n\nconst middleware = [...getDefaultMiddleware()]; // , router];\n\nexport const configuredStore = (initialState?: RootState) => {\n  // Create Store\n  const store = configureStore({\n    reducer: rootReducer,\n    middleware,\n    preloadedState: initialState,\n  });\n  return store;\n};\nexport type Store = ReturnType<typeof configuredStore>;\nexport type AppThunk = ThunkAction<void, RootState, unknown, Action<string>>;\n","/* eslint-disable import/no-cycle */\nimport { combineReducers } from 'redux';\nimport { History } from 'history';\nimport notebooksReducer from './components/Notebooks/notebooksSlice';\nimport tasksReducer from './tasks/tasksSlice';\nimport widgetsReducer from './components/Widgets/widgetsSlice';\nimport versionReducer from './components/versionSlice';\nimport appReducer from './views/appSlice';\nimport authReducer from \"./components/authSlice\";\n\nexport default function createRootReducer(history: History) {\n    return combineReducers({\n        notebooks: notebooksReducer,\n        tasks: tasksReducer,\n        widgets: widgetsReducer,\n        version: versionReducer,\n        app: appReducer,\n        auth: authReducer,\n    });\n}\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport axios from \"axios\";\nimport Root from \"./Root\";\nimport { history, configuredStore } from \"./store\";\n\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"bootstrap/dist/js/bootstrap.min.js\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.min.css\";\nimport \"react-block-ui/style.css\";\nimport \"filepond/dist/filepond.min.css\";\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\nimport \"./index.css\";\n\nconst store = configuredStore();\n\nif (window.location.origin === \"http://localhost:3000\") {\n  axios.defaults.baseURL = \"http://127.0.0.1:8000\";\n} else {\n  axios.defaults.baseURL = window.location.origin;\n}\nif (window.location.origin.startsWith(\"https://hf.space\")) {\n  axios.defaults.baseURL = window.location.href;\n}\n\n// in the case of some special params in the url\naxios.defaults.baseURL = axios.defaults.baseURL.split(\"+\")[0];\naxios.defaults.baseURL = axios.defaults.baseURL.split(\"?\")[0];\naxios.defaults.baseURL = axios.defaults.baseURL.split(\"#\")[0];\n\n\ndocument.addEventListener(\"DOMContentLoaded\", () =>\n  render(\n    <div>\n      <Root store={store} history={history} />\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={3000}\n        hideProgressBar={true}\n        newestOnTop={true}\n        closeOnClick\n        pauseOnHover\n      />\n    </div>,\n    document.getElementById(\"root\")\n  )\n);\n"],"sourceRoot":""}